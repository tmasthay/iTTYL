To run this test perform the following actions in this order.

(1) Save all of the sample files provided in this directory into your Photos on your iPhone. For clarity, those filenames are listed below.
    (a) steph.jpg 
    (b) butler.png
    (c) k2.heic
    (d) sloth.gif
    (e) city.mp4

(2) Copy and paste the text enclosed in triple quotes at the bottom of this .txt file into a new Note in the "Texts" folder and "Sent" in the Notes app.

(3) Ensure that these folders are TRACKED by iCloud. This will allow your iPhone and Mac to communicate for the purposes of this software.

(4) For items (1a)-(1d), perform the following actions in the order below.
    (a) Open the corresponding note in the Notes app, if not done so already.
    (b) Click the camera icon at the bottom of the screen.
    (c) Click "Choose Photo or Video."
    (d) Click the corresponding file from (1a)-(1d).

(5) For item (1e), perform the following actions.
    (a) Go into your Camera app.
    (b) Find the corresponding MP4 file and click it.
    (c) Click the Share icon (a square with an upwards-pointing arrow emanating from the center of the square).
    (d) Scroll down and click "Copy iCloud Link." 
    (e) Go back into the Notes app for the corresponding note. 
    (f) Perform a paste operation. You should see a URL pasted in the form "share.icloud.com..." if everything goes well.

NOTE ON MAC:
    If you wish to do this test DIRECTLY on your mac, step (5) is majorly simplified. 
    Just copy and paste as you normally would or upload in the same way as described in (5) if you prefer; both will work if directly on the Mac. 
        I believe this has to do with some security feature where it determines the origin source of the file.
    Step (6) must be followed similarly for MP4 file (1e), i.e., you must make an iCloud link.

NOTE ON SETTINGS.txt:
    This test will likely take you a little bit of time, so ensure that the environment variable MAX_IDLE_EDIT_TIME and/or WAKE_FREQUENCY are set to values of at least a minute or two.
    Otherwise, the text will get sent before you're done setting everything up haha.
    Note that the default values of 5 minutes that I have setup for this repo should be sufficient.

NOTE ON SECURITY:
The mp4 file is sent through quasi-malware (read: "malware") by downloading an iCloud share link with a coded bot haha.
    I say "quasi-malware" in the sense that the code DOES perform a regex for links of the type "share.icloud..." to ensure that it is a valid iCloud link (prevents something like an SQL injection attack).
    But it's still a bot haha.
    I plan to allow an option to disable it if you want in the future given its obvious security implications.
    iCloud share links could still be sent as raw links for video, which is fine but not quite as nice.

OTHER NOTES ON ICLOUD LINKS:
    I have only tested mp4 file transfer on Chrome. 
    Minor edits of the code are likely needed for other browsers.
    I also plan on getting this to work headless in the future, but it doesn't as of right now, but it's not super intrusive unless you schedule iCloud share links like a maniac.
        Each time you do, a browser will pop up, click some stuff and exit.

NOTE ON OTHER FILES:
    Given the security note above, you can send ANY file type can be sent this way if you accept my quasi-malware.
    Note that Chrome will detect a bot if you have too many requests, but if download fails, the iCloud link will still be shared.

Now here is that test string to paste!
"""
me now
Here is what you should see in this test.

(1) IMAGE: Steph Curry shrugging.
(2) IMAGE: Malcolm Butler interception from Super Bowl 49.
(3) IMAGE: Mountain (K2) neither celebrating nor intercepting a football.
(4) GIF: Sloth smiling (Flash from Zootopia)
(5) VIDEO: A 5-second stock video of a city
"""

